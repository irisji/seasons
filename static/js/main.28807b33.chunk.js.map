{"version":3,"sources":["SeasonDisplay.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","month","lat","dt","Date","season","getMonth","react_default","a","createElement","className","concat","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","err","_this2","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","message","src_SeasonDisplay","React","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"4LAGMA,SAAe,CACjBC,OAAO,CACHC,KAAK,sBACLC,SAAS,OAEbC,OAAO,CACHF,KAAK,qBACLC,SAAS,eAkCFE,EArBO,SAAAC,GAClB,IAVeC,EAAMC,EAUjBC,EAAK,IAAIC,KACPC,GAXSJ,EAWWE,EAAGG,WAXRJ,EAWmBF,EAAME,IAV1CD,EAAM,GAAKA,EAAO,EACXC,EAAM,EAAI,SAAS,SAEnBA,EAAM,EAAI,SAAS,UAQxBN,EAAOF,EAAaW,GAAQT,KAC5BC,EAAWH,EAAaW,GAAQR,SAEtC,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAsBN,IAChCE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAS,qBAAAC,OAAyBd,EAAzB,YAEhBU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKb,IAETW,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAS,sBAAAC,OAA0Bd,EAA1B,cCjCtBe,cACF,SAAAA,EAAYZ,GAAM,IAAAa,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACdC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMhB,KACDoB,MAAQ,CAAClB,IAAI,KAAKmB,IAAI,MAFbR,mFAMC,IAAAS,EAAAN,KACfO,OAAOC,UAAUC,YAAYC,mBACzB,SAACC,GAAD,OAAcL,EAAKM,SAAS,CAAC1B,IAAIyB,EAASE,OAAOC,YACjD,SAACT,GAAD,OAASC,EAAKM,SAAS,CAACP,IAAIA,EAAIU,6CAMpC,OAAIf,KAAKI,MAAMC,MAAQL,KAAKI,MAAMlB,IACvBK,EAAAC,EAAAC,cAAA,oBAAYO,KAAKI,MAAMC,KAG9BL,KAAKI,MAAMlB,MAAQc,KAAKI,MAAMC,IACvBd,EAAAC,EAAAC,cAACuB,EAAD,CAAgB9B,IAAKc,KAAKI,MAAMlB,MAGpCK,EAAAC,EAAAC,cAAA,gCAxBGwB,IAAMC,WA6BxBC,IAASC,OACL7B,EAAAC,EAAAC,cAAC4B,EAAD,MACAC,SAASC,cAAc","file":"static/js/main.28807b33.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css'\n\nconst seasonConfig = {\n    summer:{\n        text:'lets hit the summer',\n        iconName:'sun'\n    },\n    winter:{\n        text:'Blur, it is chilly',\n        iconName:'snowflake'\n    }\n}\n\nconst getSeason = (month,lat) => {\n    if (month>2 && month <9){\n        return lat > 0 ? 'summer':'winter';\n    }else {\n        return lat > 0 ? 'winter':'summer';\n    }\n};\n\n\nconst SeasonDisplay = props => {\n    var dt = new Date();\n    const season = getSeason (dt.getMonth(),props.lat);\n    const text = seasonConfig[season].text;\n    const iconName = seasonConfig[season].iconName;\n    //console.log(iconName)\n    return (\n        <div className = {`season-display ${season}`}>\n            <div>\n                <i className = {`left_icon massive ${iconName} icon`}></i>\n            </div>\n            <div>\n                <h1>{text}</h1>\n            </div>\n            <div>\n                <i className = {`right_icon massive ${iconName} icon`}></i>\n            </div>\n        </div>\n    );\n};\n\nexport default SeasonDisplay;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\n\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {lat:null,err:null};\n        \n    }\n\n    componentDidMount(){\n        window.navigator.geolocation.getCurrentPosition(\n            (position) => this.setState({lat:position.coords.latitude}),\n            (err) => this.setState({err:err.message})\n        );\n    }\n    \n    render(){\n        \n        if (this.state.err && !this.state.lat){\n            return <div>Error:{this.state.err}</div>;\n        }\n\n        if (this.state.lat && !this.state.err){\n            return <SeasonDisplay  lat={this.state.lat}/>;\n        }\n\n        return <div>Loading...</div>;\n            \n    }\n};\n\nReactDOM.render( \n    <App />, \n    document.querySelector('#root')\n    );"],"sourceRoot":""}